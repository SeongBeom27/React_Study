{"ast":null,"code":"var _jsxFileName = \"/Users/lgh12/Web/Book/React_Tech/my-react/hooks-app/src/Decounter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\n/**\n *  reducer는 현재 상태, 그리고 업데이트를 위해 필요한 정보를 담은 액션 값을 전달 받아 새로운 상태를 반환하는 함수\n * reducer 함수에서 새로운 상태를 만들 대는 반드시 불변성을 지켜주어야 한다.\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'INCREMENT':\n      return {\n        value: state.value + 1\n      };\n\n    case 'DECREMENT':\n      return {\n        value: state.value - 1\n      };\n\n    default:\n      // 아무것도 해당되지 않을 때 기존 상태 반환\n      return state;\n  }\n}\n\nconst DeCounter = () => {\n  _s();\n\n  /**\n   * useReducer\n   * @param1 : 리듀서 함수\n   * @param2 : param1의 기본값\n   *\n   * @return1 state     :   현재 가리키고 있는 상태\n   * @return2 dispatch  :   액션을 발생시키는 함수\n   */\n  const [state, dispatch] = useReducer(reducer, {\n    value: 0\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uD604\\uC7AC \\uCE74\\uC6B4\\uD130 \\uAC12\\uC740 \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: state.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 19\n      }, this), \" \\uC785\\uB2C8\\uB2E4.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'INCREMENT'\n      }),\n      children: \"+1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'DECREMENT'\n      }),\n      children: \"-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DeCounter, \"M9sUk6pkGh569Ghmlc8R3YFZ4F8=\");\n\n_c = DeCounter;\nexport default DeCounter;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeCounter\");","map":{"version":3,"sources":["/Users/lgh12/Web/Book/React_Tech/my-react/hooks-app/src/Decounter.js"],"names":["React","useReducer","reducer","state","action","type","value","DeCounter","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA;AACA;AACA;AACA;;;;AACA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAO;AAAEC,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAc;AAAvB,OAAP;;AACF,SAAK,WAAL;AACE,aAAO;AAAEA,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAc;AAAvB,OAAP;;AACF;AACE;AACA,aAAOH,KAAP;AAPJ;AASD;;AAED,MAAMI,SAAS,GAAG,MAAM;AAAA;;AACtB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACE,QAAM,CAACJ,KAAD,EAAQK,QAAR,IAAoBP,UAAU,CAACC,OAAD,EAAU;AAAEI,IAAAA,KAAK,EAAE;AAAT,GAAV,CAApC;AAEA,sBACE;AAAA,4BACE;AAAA,+EACY;AAAA,kBAAIH,KAAK,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,cADZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAQ,MAAA,OAAO,EAAE,MAAME,QAAQ,CAAC;AAAEH,QAAAA,IAAI,EAAE;AAAR,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAQ,MAAA,OAAO,EAAE,MAAMG,QAAQ,CAAC;AAAEH,QAAAA,IAAI,EAAE;AAAR,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CApBD;;GAAME,S;;KAAAA,S;AAsBN,eAAeA,SAAf","sourcesContent":["import React, { useReducer } from 'react'\n\n/**\n *  reducer는 현재 상태, 그리고 업데이트를 위해 필요한 정보를 담은 액션 값을 전달 받아 새로운 상태를 반환하는 함수\n * reducer 함수에서 새로운 상태를 만들 대는 반드시 불변성을 지켜주어야 한다.\n */\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'INCREMENT':\n      return { value: state.value + 1 }\n    case 'DECREMENT':\n      return { value: state.value - 1 }\n    default:\n      // 아무것도 해당되지 않을 때 기존 상태 반환\n      return state\n  }\n}\n\nconst DeCounter = () => {\n  /**\n   * useReducer\n   * @param1 : 리듀서 함수\n   * @param2 : param1의 기본값\n   *\n   * @return1 state     :   현재 가리키고 있는 상태\n   * @return2 dispatch  :   액션을 발생시키는 함수\n   */\n  const [state, dispatch] = useReducer(reducer, { value: 0 })\n\n  return (\n    <div>\n      <p>\n        현재 카운터 값은 <b>{state.value}</b> 입니다.\n      </p>\n      <button onClick={() => dispatch({ type: 'INCREMENT' })}>+1</button>\n      <button onClick={() => dispatch({ type: 'DECREMENT' })}>-1</button>\n    </div>\n  )\n}\n\nexport default DeCounter\n"]},"metadata":{},"sourceType":"module"}