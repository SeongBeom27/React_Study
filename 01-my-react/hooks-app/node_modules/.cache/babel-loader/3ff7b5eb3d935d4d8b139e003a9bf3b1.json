{"ast":null,"code":"var _jsxFileName = \"/Users/lgh12/Web/Book/React_Tech/my-react/hooks-app/src/Info.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Info = () => {\n  _s();\n\n  // hook의 useState\n  // value    :     첫번째 원소로 상태 값\n  // setValue :     두번째 원소값 상태를 설정하는 함수\n  //                이 함수에 상태 상태 변수 파라미터를 넣어서 호출하면 전달 받은 파라미터로 값이 바뀌고 component가\n  //                rerendering 된다\n  const [name, setname] = useState('');\n  const {\n    nickname,\n    setNickname\n  } = useState('');\n\n  const onChangeName = e => {\n    setname(e.target.value);\n  };\n\n  const onChangeNickname = e => {\n    setNickname(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: \"name\",\n      onChange: onChangeName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: \"nickname\",\n      onChange: onChangeNickname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"\\uC774\\uB984:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), \" \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"\\uB2C9\\uB124\\uC784:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), \" \", nickname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Info, \"wuLJjyvckjV2MlxrXdN3Vy8QCLY=\");\n\n_c = Info;\nexport default Info;\n\nvar _c;\n\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"sources":["/Users/lgh12/Web/Book/React_Tech/my-react/hooks-app/src/Info.js"],"names":["React","useState","Info","name","setname","nickname","setNickname","onChangeName","e","target","value","onChangeNickname"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB;AACA;AACA;AACA;AACA;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEI,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BL,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMM,YAAY,GAAGC,CAAC,IAAI;AACxBJ,IAAAA,OAAO,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAGH,CAAC,IAAI;AAC5BF,IAAAA,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAO,MAAA,KAAK,EAAC,MAAb;AAAoB,MAAA,QAAQ,EAAEH;AAA9B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,KAAK,EAAC,UAAb;AAAwB,MAAA,QAAQ,EAAEI;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,8BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,OACcR,IADd;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,OACeE,QADf;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA/BD;;GAAMH,I;;KAAAA,I;AAiCN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst Info = () => {\n  // hook의 useState\n  // value    :     첫번째 원소로 상태 값\n  // setValue :     두번째 원소값 상태를 설정하는 함수\n  //                이 함수에 상태 상태 변수 파라미터를 넣어서 호출하면 전달 받은 파라미터로 값이 바뀌고 component가\n  //                rerendering 된다\n  const [name, setname] = useState('')\n  const { nickname, setNickname } = useState('')\n\n  const onChangeName = e => {\n    setname(e.target.value)\n  }\n\n  const onChangeNickname = e => {\n    setNickname(e.target.value)\n  }\n\n  return (\n    <div>\n      <input value=\"name\" onChange={onChangeName} />\n      <input value=\"nickname\" onChange={onChangeNickname} />\n      <div>\n        <div>\n          <b>이름:</b> {name}\n        </div>\n        <div>\n          <b>닉네임:</b> {nickname}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Info\n"]},"metadata":{},"sourceType":"module"}