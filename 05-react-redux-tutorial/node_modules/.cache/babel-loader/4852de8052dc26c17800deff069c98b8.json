{"ast":null,"code":"var _jsxFileName = \"/Users/lgh12/Web/React_Tech/react-redux-tutorial/src/containers/TodosContainer.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { changeInput, insert, toggle, remove } from '../modules/todos';\nimport Todos from '../components/Todos';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodosContainer = (input, todos, changeInput, insert, toggle, remove) => {\n  return /*#__PURE__*/_jsxDEV(Todos, {\n    input: input,\n    todos: todos,\n    onChangeInput: changeInput,\n    onInsert: insert,\n    ontoggle: toggle,\n    onRemove: remove\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n/**\n * @brief    리덕스 스토어 안의 상태를 컴포넌트의 props로 넘겨주기 위해 설정하는 함수\n * @param    state\n */\n\n\n_c = TodosContainer;\n\nconst mapStateToProps = state => ({\n  input: state.todos.input,\n  todos: state.todos.todos\n});\n/**\n * @brief    액션 생성 함수를 컴포넌트의 props로 넘겨주기 위해 사용하는 함수\n * @param    dispatch\n */\n\n\nconst mapDispatchToProps = dispatch => ({\n  // 임시 함수\n  changeInput: () => {\n    dispatch(changeInput());\n  },\n  insert: () => {\n    dispatch(insert());\n  },\n  insert: () => {\n    dispatch(insert());\n  },\n  insert: () => {\n    dispatch(insert());\n  }\n}); // mapStateToProps, mapDispatchToProps 을 따로\n\n\nexport default connect( // 비구조화 할당을 통해 todos를 분리하여\n// state.todos.input 대신 todos.input 을 사용\nmapStateToProps, {\n  changeInput,\n  insert,\n  toggle,\n  remove\n})(TodosContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"TodosContainer\");","map":{"version":3,"sources":["/Users/lgh12/Web/React_Tech/react-redux-tutorial/src/containers/TodosContainer.js"],"names":["React","connect","changeInput","insert","toggle","remove","Todos","TodosContainer","input","todos","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,MAAtB,EAA8BC,MAA9B,EAAsCC,MAAtC,QAAoD,kBAApD;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;AAEA,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,KAAR,EAAeP,WAAf,EAA4BC,MAA5B,EAAoCC,MAApC,EAA4CC,MAA5C,KAAuD;AAC5E,sBACE,QAAC,KAAD;AACE,IAAA,KAAK,EAAEG,KADT;AAEE,IAAA,KAAK,EAAEC,KAFT;AAGE,IAAA,aAAa,EAAEP,WAHjB;AAIE,IAAA,QAAQ,EAAEC,MAJZ;AAKE,IAAA,QAAQ,EAAEC,MALZ;AAME,IAAA,QAAQ,EAAEC;AANZ;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAXD;AAaA;AACA;AACA;AACA;;;KAhBME,c;;AAiBN,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAClCH,EAAAA,KAAK,EAAEG,KAAK,CAACF,KAAN,CAAYD,KADe;AAElCC,EAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYA;AAFe,CAAZ,CAAxB;AAKA;AACA;AACA;AACA;;;AACA,MAAMG,kBAAkB,GAAIC,QAAD,KAAe;AACxC;AACAX,EAAAA,WAAW,EAAE,MAAM;AACjBW,IAAAA,QAAQ,CAACX,WAAW,EAAZ,CAAR;AACD,GAJuC;AAKxCC,EAAAA,MAAM,EAAE,MAAM;AACZU,IAAAA,QAAQ,CAACV,MAAM,EAAP,CAAR;AACD,GAPuC;AAQxCA,EAAAA,MAAM,EAAE,MAAM;AACZU,IAAAA,QAAQ,CAACV,MAAM,EAAP,CAAR;AACD,GAVuC;AAWxCA,EAAAA,MAAM,EAAE,MAAM;AACZU,IAAAA,QAAQ,CAACV,MAAM,EAAP,CAAR;AACD;AAbuC,CAAf,CAA3B,C,CAgBA;;;AACA,eAAeF,OAAO,EACpB;AACA;AACAS,eAHoB,EAIpB;AACER,EAAAA,WADF;AAEEC,EAAAA,MAFF;AAGEC,EAAAA,MAHF;AAIEC,EAAAA;AAJF,CAJoB,CAAP,CAUbE,cAVa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { changeInput, insert, toggle, remove } from '../modules/todos';\nimport Todos from '../components/Todos';\n\nconst TodosContainer = (input, todos, changeInput, insert, toggle, remove) => {\n  return (\n    <Todos\n      input={input}\n      todos={todos}\n      onChangeInput={changeInput}\n      onInsert={insert}\n      ontoggle={toggle}\n      onRemove={remove}\n    ></Todos>\n  );\n};\n\n/**\n * @brief    리덕스 스토어 안의 상태를 컴포넌트의 props로 넘겨주기 위해 설정하는 함수\n * @param    state\n */\nconst mapStateToProps = (state) => ({\n  input: state.todos.input,\n  todos: state.todos.todos,\n});\n\n/**\n * @brief    액션 생성 함수를 컴포넌트의 props로 넘겨주기 위해 사용하는 함수\n * @param    dispatch\n */\nconst mapDispatchToProps = (dispatch) => ({\n  // 임시 함수\n  changeInput: () => {\n    dispatch(changeInput());\n  },\n  insert: () => {\n    dispatch(insert());\n  },\n  insert: () => {\n    dispatch(insert());\n  },\n  insert: () => {\n    dispatch(insert());\n  },\n});\n\n// mapStateToProps, mapDispatchToProps 을 따로\nexport default connect(\n  // 비구조화 할당을 통해 todos를 분리하여\n  // state.todos.input 대신 todos.input 을 사용\n  mapStateToProps,\n  {\n    changeInput,\n    insert,\n    toggle,\n    remove,\n  },\n)(TodosContainer);\n"]},"metadata":{},"sourceType":"module"}