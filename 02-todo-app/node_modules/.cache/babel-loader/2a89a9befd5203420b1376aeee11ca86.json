{"ast":null,"code":"var _jsxFileName = \"/Users/lgh12/Web/Book/React_Tech/todo-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useCallback } from 'react';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\nimport TodoTemplate from './components/TodoTemplate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createBulkTodos() {\n  const array = [];\n\n  for (let i = 0; i <= 2500; i++) {\n    array.push({\n      id: i,\n      text: `할 일  ${i}`,\n      checked: false\n    });\n  }\n\n  return array;\n}\n\nconst App = () => {\n  _s();\n\n  const [todos, setTodos] = useState(createBulkTodos); // 고윳값으로 사용될 id\n  // ref를 사용하여 변수 담기\n\n  const nextId = useRef(4);\n  /**\n   * @param1 text:  todo 목록에 사용할 text\n   */\n\n  const onInsert = useCallback(text => {\n    const todo = {\n      id: nextId.current,\n      text,\n      checked: false\n    };\n    setTodos(todos.concat(todo));\n    nextId.current += 1; // nextId 1씩 더하기\n  }, []);\n  const onRemove = useCallback(id => setTodos(todos.filter(todo => todo.id !== id)), [todos]);\n  const onToggle = useCallback(id => {\n    setTodos(todos.map(todo => todo.id === id ? { ...todo,\n      checked: !todo.checked\n    } : todo));\n  }, [todos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TodoTemplate, {\n      children: [/*#__PURE__*/_jsxDEV(TodoInsert, {\n        onInsert: onInsert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: todos,\n        onRemove: onRemove,\n        onToggle: onToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"19jPfAucTjmKWf5YvbgDjRVyPZE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lgh12/Web/Book/React_Tech/todo-app/src/App.js"],"names":["React","useState","useRef","useCallback","TodoInsert","TodoList","TodoTemplate","createBulkTodos","array","i","push","id","text","checked","App","todos","setTodos","nextId","onInsert","todo","current","concat","onRemove","filter","onToggle","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,WAAlC,QAAqD,OAArD;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;;AAEA,SAASC,eAAT,GAA2B;AACzB,QAAMC,KAAK,GAAG,EAAd;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,IAArB,EAA2BA,CAAC,EAA5B,EAAgC;AAC9BD,IAAAA,KAAK,CAACE,IAAN,CAAW;AACTC,MAAAA,EAAE,EAAEF,CADK;AAETG,MAAAA,IAAI,EAAG,QAAOH,CAAE,EAFP;AAGTI,MAAAA,OAAO,EAAE;AAHA,KAAX;AAKD;;AAED,SAAOL,KAAP;AACD;;AAED,MAAMM,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAACM,eAAD,CAAlC,CADgB,CAGhB;AACA;;AACA,QAAMU,MAAM,GAAGf,MAAM,CAAC,CAAD,CAArB;AAEA;AACF;AACA;;AACE,QAAMgB,QAAQ,GAAGf,WAAW,CAAES,IAAD,IAAU;AACrC,UAAMO,IAAI,GAAG;AACXR,MAAAA,EAAE,EAAEM,MAAM,CAACG,OADA;AAEXR,MAAAA,IAFW;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKAG,IAAAA,QAAQ,CAACD,KAAK,CAACM,MAAN,CAAaF,IAAb,CAAD,CAAR;AACAF,IAAAA,MAAM,CAACG,OAAP,IAAkB,CAAlB,CAPqC,CAOhB;AACtB,GAR2B,EAQzB,EARyB,CAA5B;AAUA,QAAME,QAAQ,GAAGnB,WAAW,CACzBQ,EAAD,IAAQK,QAAQ,CAACD,KAAK,CAACQ,MAAN,CAAcJ,IAAD,IAAUA,IAAI,CAACR,EAAL,KAAYA,EAAnC,CAAD,CADU,EAE1B,CAACI,KAAD,CAF0B,CAA5B;AAKA,QAAMS,QAAQ,GAAGrB,WAAW,CACzBQ,EAAD,IAAQ;AACNK,IAAAA,QAAQ,CACND,KAAK,CAACU,GAAN,CAAWN,IAAD,IACRA,IAAI,CAACR,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGQ,IAAL;AAAWN,MAAAA,OAAO,EAAE,CAACM,IAAI,CAACN;AAA1B,KAAjB,GAAuDM,IADzD,CADM,CAAR;AAKD,GAPyB,EAQ1B,CAACJ,KAAD,CAR0B,CAA5B;AAWA,sBACE;AAAA,2BACE,QAAC,YAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAEG;AAAtB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AACE,QAAA,KAAK,EAAEH,KADT;AAEE,QAAA,QAAQ,EAAEO,QAFZ;AAGE,QAAA,QAAQ,EAAEE;AAHZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAhDD;;GAAMV,G;;KAAAA,G;AAkDN,eAAeA,GAAf","sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\nimport TodoTemplate from './components/TodoTemplate';\n\nfunction createBulkTodos() {\n  const array = [];\n  for (let i = 0; i <= 2500; i++) {\n    array.push({\n      id: i,\n      text: `할 일  ${i}`,\n      checked: false,\n    });\n  }\n\n  return array;\n}\n\nconst App = () => {\n  const [todos, setTodos] = useState(createBulkTodos);\n\n  // 고윳값으로 사용될 id\n  // ref를 사용하여 변수 담기\n  const nextId = useRef(4);\n\n  /**\n   * @param1 text:  todo 목록에 사용할 text\n   */\n  const onInsert = useCallback((text) => {\n    const todo = {\n      id: nextId.current,\n      text,\n      checked: false,\n    };\n    setTodos(todos.concat(todo));\n    nextId.current += 1; // nextId 1씩 더하기\n  }, []);\n\n  const onRemove = useCallback(\n    (id) => setTodos(todos.filter((todo) => todo.id !== id)),\n    [todos],\n  );\n\n  const onToggle = useCallback(\n    (id) => {\n      setTodos(\n        todos.map((todo) =>\n          todo.id === id ? { ...todo, checked: !todo.checked } : todo,\n        ),\n      );\n    },\n    [todos],\n  );\n\n  return (\n    <div>\n      <TodoTemplate>\n        <TodoInsert onInsert={onInsert}></TodoInsert>\n        <TodoList\n          todos={todos}\n          onRemove={onRemove}\n          onToggle={onToggle}\n        ></TodoList>\n      </TodoTemplate>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}