{"ast":null,"code":"var _jsxFileName = \"/Users/lgh12/Web/Book/React_Tech/todo-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useCallback } from 'react';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\nimport TodoTemplate from './components/TodoTemplate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [todos, setTodos] = useState([// id는 고유 key 역할을 하기 위함\n  {\n    id: 1,\n    text: '리액트의 기초 알아보기',\n    checked: true\n  }, {\n    id: 2,\n    text: '컴포넌트 스타일링 하기',\n    checked: true\n  }, {\n    id: 3,\n    text: '동적인 앱으로 업데이트하기',\n    checked: false\n  }]); // 고윳값으로 사용될 id\n  // ref를 사용하여 변수 담기\n\n  const nextId = useRef(4);\n  /**\n   * @param1 text:  todo 목록에 사용할 text\n   */\n\n  const onInsert = useCallback(text => {\n    const todo = {\n      id: nextId.current,\n      text,\n      checked: false\n    };\n    setTodos(todos.concat(todo));\n    nextId.current += 1; // nextId 1씩 더하기\n  }, []);\n  const onRemove = useCallback(id => setTodos(todos.filter(todo => todo.id !== id)), [todos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TodoTemplate, {\n      children: [/*#__PURE__*/_jsxDEV(TodoInsert, {\n        onInsert: onInsert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: todos,\n        onRemove: onRemove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"31DJyzdHotxsckRLeA7+X7sMe2E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lgh12/Web/Book/React_Tech/todo-app/src/App.js"],"names":["React","useState","useRef","useCallback","TodoInsert","TodoList","TodoTemplate","App","todos","setTodos","id","text","checked","nextId","onInsert","todo","current","concat","onRemove","filter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,WAAlC,QAAqD,OAArD;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CACjC;AACA;AAAES,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,cAAf;AAA+BC,IAAAA,OAAO,EAAE;AAAxC,GAFiC,EAGjC;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,cAAf;AAA+BC,IAAAA,OAAO,EAAE;AAAxC,GAHiC,EAIjC;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,gBAAf;AAAiCC,IAAAA,OAAO,EAAE;AAA1C,GAJiC,CAAD,CAAlC,CADgB,CAQhB;AACA;;AACA,QAAMC,MAAM,GAAGX,MAAM,CAAC,CAAD,CAArB;AAEA;AACF;AACA;;AACE,QAAMY,QAAQ,GAAGX,WAAW,CAAEQ,IAAD,IAAU;AACrC,UAAMI,IAAI,GAAG;AACXL,MAAAA,EAAE,EAAEG,MAAM,CAACG,OADA;AAEXL,MAAAA,IAFW;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKAH,IAAAA,QAAQ,CAACD,KAAK,CAACS,MAAN,CAAaF,IAAb,CAAD,CAAR;AACAF,IAAAA,MAAM,CAACG,OAAP,IAAkB,CAAlB,CAPqC,CAOhB;AACtB,GAR2B,EAQzB,EARyB,CAA5B;AAUA,QAAME,QAAQ,GAAGf,WAAW,CACzBO,EAAD,IAAQD,QAAQ,CAACD,KAAK,CAACW,MAAN,CAAcJ,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYA,EAAnC,CAAD,CADU,EAE1B,CAACF,KAAD,CAF0B,CAA5B;AAKA,sBACE;AAAA,2BACE,QAAC,YAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAEM;AAAtB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEN,KAAjB;AAAwB,QAAA,QAAQ,EAAEU;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAtCD;;GAAMX,G;;KAAAA,G;AAwCN,eAAeA,GAAf","sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\nimport TodoTemplate from './components/TodoTemplate';\n\nconst App = () => {\n  const [todos, setTodos] = useState([\n    // id는 고유 key 역할을 하기 위함\n    { id: 1, text: '리액트의 기초 알아보기', checked: true },\n    { id: 2, text: '컴포넌트 스타일링 하기', checked: true },\n    { id: 3, text: '동적인 앱으로 업데이트하기', checked: false },\n  ]);\n\n  // 고윳값으로 사용될 id\n  // ref를 사용하여 변수 담기\n  const nextId = useRef(4);\n\n  /**\n   * @param1 text:  todo 목록에 사용할 text\n   */\n  const onInsert = useCallback((text) => {\n    const todo = {\n      id: nextId.current,\n      text,\n      checked: false,\n    };\n    setTodos(todos.concat(todo));\n    nextId.current += 1; // nextId 1씩 더하기\n  }, []);\n\n  const onRemove = useCallback(\n    (id) => setTodos(todos.filter((todo) => todo.id !== id)),\n    [todos],\n  );\n\n  return (\n    <div>\n      <TodoTemplate>\n        <TodoInsert onInsert={onInsert}></TodoInsert>\n        <TodoList todos={todos} onRemove={onRemove}></TodoList>\n      </TodoTemplate>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}