{"ast":null,"code":"var _jsxFileName = \"/Users/lgh12/Web/Book/React_Tech/news-viewer/src/components/NewsList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport NewsItem from './NewsItem';\nimport './NewsList.scss'; // const sample = {\n//   title: '성범',\n//   description: 'stock increase!!! once',\n//   url: 'https://www.naver.com',\n//   urlToImage: 'https://via.placeholder.com/160',\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewsList = ({\n  category\n}) => {\n  _s();\n\n  const [articles, setArticles] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    // async를 사용하는 함수는 따로 선언\n    const fetchData = async () => {\n      // loading 중인 상태\n      setLoading(true);\n\n      try {\n        const response = await axios.get(`https://newsapi.org/v2/top-headlines?country=kr&category={category.text}&apiKey=d9f7906f687945fe93c03a8857038a46`);\n        setArticles(response.data.articles);\n      } catch (e) {\n        console.log(e);\n      }\n\n      setLoading(false);\n    };\n\n    fetchData();\n  }, []); // articles 값이 설정되지 않으면 다음 코드가 동작하면 에러를 일으킴\n\n  if (!articles || loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"/NewsList\",\n      children: \"\\uB300\\uAE30 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  } // key 값은 article의 고유값이 될 수 있는 url로 설정\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"NewsList\",\n    children: articles.map(article => {\n      // return 안하면 map 함수에서 반환값을 얻지를 못했었음... 이유를 모르겠네\n      return /*#__PURE__*/_jsxDEV(NewsItem, {\n        article: article\n      }, article.url, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewsList, \"BrV4hxJHQDgbXXsCKLJH/cawVkg=\");\n\n_c = NewsList;\nexport default NewsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsList\");","map":{"version":3,"sources":["/Users/lgh12/Web/Book/React_Tech/news-viewer/src/components/NewsList.js"],"names":["React","useState","useEffect","axios","NewsItem","NewsList","category","articles","setArticles","loading","setLoading","fetchData","response","get","data","e","console","log","map","article","url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,iBAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACjC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMS,SAAS,GAAG,YAAY;AAC5B;AACAD,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAI;AACF,cAAME,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CACpB,kHADoB,CAAvB;AAGAL,QAAAA,WAAW,CAACI,QAAQ,CAACE,IAAT,CAAcP,QAAf,CAAX;AACD,OALD,CAKE,OAAOQ,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;;AACDL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAZD;;AAaAC,IAAAA,SAAS;AACV,GAhBQ,EAgBN,EAhBM,CAAT,CAJiC,CAsBjC;;AACA,MAAI,CAACJ,QAAD,IAAaE,OAAjB,EAA0B;AACxB,wBAAO;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAzBgC,CA0BjC;;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,cACGF,QAAQ,CAACW,GAAT,CAAcC,OAAD,IAAa;AACzB;AACA,0BAAO,QAAC,QAAD;AAA4B,QAAA,OAAO,EAAEA;AAArC,SAAeA,OAAO,CAACC,GAAvB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAHA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAnCD;;GAAMf,Q;;KAAAA,Q;AAqCN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport NewsItem from './NewsItem';\nimport './NewsList.scss';\n\n// const sample = {\n//   title: '성범',\n//   description: 'stock increase!!! once',\n//   url: 'https://www.naver.com',\n//   urlToImage: 'https://via.placeholder.com/160',\n// };\nconst NewsList = ({ category }) => {\n  const [articles, setArticles] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    // async를 사용하는 함수는 따로 선언\n    const fetchData = async () => {\n      // loading 중인 상태\n      setLoading(true);\n      try {\n        const response = await axios.get(\n          `https://newsapi.org/v2/top-headlines?country=kr&category={category.text}&apiKey=d9f7906f687945fe93c03a8857038a46`,\n        );\n        setArticles(response.data.articles);\n      } catch (e) {\n        console.log(e);\n      }\n      setLoading(false);\n    };\n    fetchData();\n  }, []);\n\n  // articles 값이 설정되지 않으면 다음 코드가 동작하면 에러를 일으킴\n  if (!articles || loading) {\n    return <div className=\"/NewsList\">대기 중...</div>;\n  }\n  // key 값은 article의 고유값이 될 수 있는 url로 설정\n  return (\n    <div className=\"NewsList\">\n      {articles.map((article) => {\n        // return 안하면 map 함수에서 반환값을 얻지를 못했었음... 이유를 모르겠네\n        return <NewsItem key={article.url} article={article}></NewsItem>;\n      })}\n    </div>\n  );\n};\n\nexport default NewsList;\n"]},"metadata":{},"sourceType":"module"}