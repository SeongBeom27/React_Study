{"ast":null,"code":"'use strict';\n/* Simplified implementation of DOM2 EventTarget.\n *   http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget\n */\n\nfunction EventTarget() {\n  this._listeners = {};\n}\n\nEventTarget.prototype.addEventListener = function (eventType, listener) {\n  if (!(eventType in this._listeners)) {\n    this._listeners[eventType] = [];\n  }\n\n  var arr = this._listeners[eventType]; // #4\n\n  if (arr.indexOf(listener) === -1) {\n    // Make a copy so as not to interfere with a current dispatchEvent.\n    arr = arr.concat([listener]);\n  }\n\n  this._listeners[eventType] = arr;\n};\n\nEventTarget.prototype.removeEventListener = function (eventType, listener) {\n  var arr = this._listeners[eventType];\n\n  if (!arr) {\n    return;\n  }\n\n  var idx = arr.indexOf(listener);\n\n  if (idx !== -1) {\n    if (arr.length > 1) {\n      // Make a copy so as not to interfere with a current dispatchEvent.\n      this._listeners[eventType] = arr.slice(0, idx).concat(arr.slice(idx + 1));\n    } else {\n      delete this._listeners[eventType];\n    }\n\n    return;\n  }\n};\n\nEventTarget.prototype.dispatchEvent = function (event) {\n  var t = event.type;\n  var args = Array.prototype.slice.call(arguments, 0); // TODO: This doesn't match the real behavior; per spec, onfoo get\n  // their place in line from the /first/ time they're set from\n  // non-null. Although WebKit bumps it to the end every time it's\n  // set.\n\n  if (this['on' + t]) {\n    this['on' + t].apply(this, args);\n  }\n\n  if (t in this._listeners) {\n    // Grab a reference to the listeners list. removeEventListener may alter the list.\n    var listeners = this._listeners[t];\n\n    for (var i = 0; i < listeners.length; i++) {\n      listeners[i].apply(this, args);\n    }\n  }\n};\n\nmodule.exports = EventTarget;","map":{"version":3,"sources":["/Users/lgh12/Web/Book/React_Tech/news-viewer/node_modules/sockjs-client/lib/event/eventtarget.js"],"names":["EventTarget","_listeners","prototype","addEventListener","eventType","listener","arr","indexOf","concat","removeEventListener","idx","length","slice","dispatchEvent","event","t","type","args","Array","call","arguments","apply","listeners","i","module","exports"],"mappings":"AAAA;AAEA;AACA;AACA;;AAEA,SAASA,WAAT,GAAuB;AACrB,OAAKC,UAAL,GAAkB,EAAlB;AACD;;AAEDD,WAAW,CAACE,SAAZ,CAAsBC,gBAAtB,GAAyC,UAASC,SAAT,EAAoBC,QAApB,EAA8B;AACrE,MAAI,EAAED,SAAS,IAAI,KAAKH,UAApB,CAAJ,EAAqC;AACnC,SAAKA,UAAL,CAAgBG,SAAhB,IAA6B,EAA7B;AACD;;AACD,MAAIE,GAAG,GAAG,KAAKL,UAAL,CAAgBG,SAAhB,CAAV,CAJqE,CAKrE;;AACA,MAAIE,GAAG,CAACC,OAAJ,CAAYF,QAAZ,MAA0B,CAAC,CAA/B,EAAkC;AAChC;AACAC,IAAAA,GAAG,GAAGA,GAAG,CAACE,MAAJ,CAAW,CAACH,QAAD,CAAX,CAAN;AACD;;AACD,OAAKJ,UAAL,CAAgBG,SAAhB,IAA6BE,GAA7B;AACD,CAXD;;AAaAN,WAAW,CAACE,SAAZ,CAAsBO,mBAAtB,GAA4C,UAASL,SAAT,EAAoBC,QAApB,EAA8B;AACxE,MAAIC,GAAG,GAAG,KAAKL,UAAL,CAAgBG,SAAhB,CAAV;;AACA,MAAI,CAACE,GAAL,EAAU;AACR;AACD;;AACD,MAAII,GAAG,GAAGJ,GAAG,CAACC,OAAJ,CAAYF,QAAZ,CAAV;;AACA,MAAIK,GAAG,KAAK,CAAC,CAAb,EAAgB;AACd,QAAIJ,GAAG,CAACK,MAAJ,GAAa,CAAjB,EAAoB;AAClB;AACA,WAAKV,UAAL,CAAgBG,SAAhB,IAA6BE,GAAG,CAACM,KAAJ,CAAU,CAAV,EAAaF,GAAb,EAAkBF,MAAlB,CAAyBF,GAAG,CAACM,KAAJ,CAAUF,GAAG,GAAG,CAAhB,CAAzB,CAA7B;AACD,KAHD,MAGO;AACL,aAAO,KAAKT,UAAL,CAAgBG,SAAhB,CAAP;AACD;;AACD;AACD;AACF,CAfD;;AAiBAJ,WAAW,CAACE,SAAZ,CAAsBW,aAAtB,GAAsC,UAASC,KAAT,EAAgB;AACpD,MAAIC,CAAC,GAAGD,KAAK,CAACE,IAAd;AACA,MAAIC,IAAI,GAAGC,KAAK,CAAChB,SAAN,CAAgBU,KAAhB,CAAsBO,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,CAAX,CAFoD,CAGpD;AACA;AACA;AACA;;AACA,MAAI,KAAK,OAAOL,CAAZ,CAAJ,EAAoB;AAClB,SAAK,OAAOA,CAAZ,EAAeM,KAAf,CAAqB,IAArB,EAA2BJ,IAA3B;AACD;;AACD,MAAIF,CAAC,IAAI,KAAKd,UAAd,EAA0B;AACxB;AACA,QAAIqB,SAAS,GAAG,KAAKrB,UAAL,CAAgBc,CAAhB,CAAhB;;AACA,SAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAAS,CAACX,MAA9B,EAAsCY,CAAC,EAAvC,EAA2C;AACzCD,MAAAA,SAAS,CAACC,CAAD,CAAT,CAAaF,KAAb,CAAmB,IAAnB,EAAyBJ,IAAzB;AACD;AACF;AACF,CAjBD;;AAmBAO,MAAM,CAACC,OAAP,GAAiBzB,WAAjB","sourcesContent":["'use strict';\n\n/* Simplified implementation of DOM2 EventTarget.\n *   http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget\n */\n\nfunction EventTarget() {\n  this._listeners = {};\n}\n\nEventTarget.prototype.addEventListener = function(eventType, listener) {\n  if (!(eventType in this._listeners)) {\n    this._listeners[eventType] = [];\n  }\n  var arr = this._listeners[eventType];\n  // #4\n  if (arr.indexOf(listener) === -1) {\n    // Make a copy so as not to interfere with a current dispatchEvent.\n    arr = arr.concat([listener]);\n  }\n  this._listeners[eventType] = arr;\n};\n\nEventTarget.prototype.removeEventListener = function(eventType, listener) {\n  var arr = this._listeners[eventType];\n  if (!arr) {\n    return;\n  }\n  var idx = arr.indexOf(listener);\n  if (idx !== -1) {\n    if (arr.length > 1) {\n      // Make a copy so as not to interfere with a current dispatchEvent.\n      this._listeners[eventType] = arr.slice(0, idx).concat(arr.slice(idx + 1));\n    } else {\n      delete this._listeners[eventType];\n    }\n    return;\n  }\n};\n\nEventTarget.prototype.dispatchEvent = function(event) {\n  var t = event.type;\n  var args = Array.prototype.slice.call(arguments, 0);\n  // TODO: This doesn't match the real behavior; per spec, onfoo get\n  // their place in line from the /first/ time they're set from\n  // non-null. Although WebKit bumps it to the end every time it's\n  // set.\n  if (this['on' + t]) {\n    this['on' + t].apply(this, args);\n  }\n  if (t in this._listeners) {\n    // Grab a reference to the listeners list. removeEventListener may alter the list.\n    var listeners = this._listeners[t];\n    for (var i = 0; i < listeners.length; i++) {\n      listeners[i].apply(this, args);\n    }\n  }\n};\n\nmodule.exports = EventTarget;\n"]},"metadata":{},"sourceType":"script"}