{"ast":null,"code":"var _jsxFileName = \"/Users/lgh12/Web/Book/React_Tech/news-viewer/src/components/NewsList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from '../../node_modules/axios/index';\nimport NewsItem from './NewsItem';\nimport './NewsList.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewsList = () => {\n  _s();\n\n  const [articles, setArticles] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    // async를 사용하는 함수는 따로 선언\n    const fetchData = async () => {\n      // loading 중인 상태\n      setLoading(true);\n\n      try {\n        const response = await axios.get('https://newsapi.org/v2/top-headlines?country=kr&apiKey=d9f7906f687945fe93c03a8857038a46');\n        setArticles(response.data.articles);\n      } catch (e) {\n        console.log(e);\n      }\n\n      setLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      classNAme: \"/NewsList\",\n      children: \"\\uB300\\uAE30 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  } // articles 값이 설정되지 않으면 다음 코드가 동작하면 에러를 일으킴\n\n\n  if (!articles) {\n    return null;\n  } // key 값은 article의 고유값이 될 수 있는 url로 설정\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"NewsList\",\n    children: articles.map(article => {\n      /*#__PURE__*/\n      _jsxDEV(NewsItem, {\n        article: article\n      }, article.url, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewsList, \"BrV4hxJHQDgbXXsCKLJH/cawVkg=\");\n\n_c = NewsList;\nexport default NewsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsList\");","map":{"version":3,"sources":["/Users/lgh12/Web/Book/React_Tech/news-viewer/src/components/NewsList.js"],"names":["React","useState","useEffect","axios","NewsItem","NewsList","articles","setArticles","loading","setLoading","fetchData","response","get","data","e","console","log","map","article","url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,iBAAP;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMQ,SAAS,GAAG,YAAY;AAC5B;AACAD,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAI;AACF,cAAME,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CACrB,yFADqB,CAAvB;AAGAL,QAAAA,WAAW,CAACI,QAAQ,CAACE,IAAT,CAAcP,QAAf,CAAX;AACD,OALD,CAKE,OAAOQ,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;;AACDL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAZD;;AAaAC,IAAAA,SAAS;AACV,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,MAAIF,OAAJ,EAAa;AACX,wBAAO;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAxBoB,CAyBrB;;;AACA,MAAI,CAACF,QAAL,EAAe;AACb,WAAO,IAAP;AACD,GA5BoB,CA6BrB;;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,cACGA,QAAQ,CAACW,GAAT,CAAcC,OAAD,IAAa;AACzB;AAAA,cAAC,QAAD;AAA4B,QAAA,OAAO,EAAEA;AAArC,SAAeA,OAAO,CAACC,GAAvB;AAAA;AAAA;AAAA;AAAA;AACD,KAFA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CArCD;;GAAMd,Q;;KAAAA,Q;AAuCN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from '../../node_modules/axios/index';\nimport NewsItem from './NewsItem';\nimport './NewsList.scss';\n\nconst NewsList = () => {\n  const [articles, setArticles] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    // async를 사용하는 함수는 따로 선언\n    const fetchData = async () => {\n      // loading 중인 상태\n      setLoading(true);\n      try {\n        const response = await axios.get(\n          'https://newsapi.org/v2/top-headlines?country=kr&apiKey=d9f7906f687945fe93c03a8857038a46',\n        );\n        setArticles(response.data.articles);\n      } catch (e) {\n        console.log(e);\n      }\n      setLoading(false);\n    };\n    fetchData();\n  }, []);\n\n  if (loading) {\n    return <div classNAme=\"/NewsList\">대기 중...</div>;\n  }\n  // articles 값이 설정되지 않으면 다음 코드가 동작하면 에러를 일으킴\n  if (!articles) {\n    return null;\n  }\n  // key 값은 article의 고유값이 될 수 있는 url로 설정\n  return (\n    <div className=\"NewsList\">\n      {articles.map((article) => {\n        <NewsItem key={article.url} article={article}></NewsItem>;\n      })}\n    </div>\n  );\n};\n\nexport default NewsList;\n"]},"metadata":{},"sourceType":"module"}